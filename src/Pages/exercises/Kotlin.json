[
      {
        "question": "Write a Kotlin program to display 'Hello, World!'",
        "solution": "fun main() {\n    println(\"Hello, World!\")\n}"
      },
      {
        "question": "Create a program to calculate the factorial of a number.",
        "solution": "fun factorial(n: Int): Int {\n    return if (n == 0) 1 else n * factorial(n - 1)\n}\n\nfun main() {\n    val num = 5\n    println(\"Factorial of $num is: ${factorial(num)}\")\n}"
      },
      {
        "question": "Write a program to find the sum of elements in an array.",
        "solution": "fun main() {\n    val arr = intArrayOf(1, 2, 3, 4, 5)\n    var sum = 0\n    for (element in arr) {\n        sum += element\n    }\n    println(\"Sum of array elements: $sum\")\n}"
      },
      {
        "question": "Create a program to check if a number is prime or not.",
        "solution": "fun isPrime(num: Int): Boolean {\n    if (num <= 1)\n        return false\n    for (i in 2..num / 2) {\n        if (num % i == 0)\n            return false\n    }\n    return true\n}\n\nfun main() {\n    val num = 17\n    if (isPrime(num))\n        println(\"$num is a prime number\")\n    else\n        println(\"$num is not a prime number\")\n}"
      },
      {
        "question": "Write a program to reverse a string.",
        "solution": "fun main() {\n    val str = \"Hello, Kotlin!\"\n    val reversed = str.reversed()\n    println(\"Reversed string: $reversed\")\n}"
      },
      {
        "question": "Create a program to find the Fibonacci series up to n terms.",
        "solution": "fun fibonacci(n: Int) {\n    var a = 0\n    var b = 1\n    print(\"Fibonacci Series up to $n terms: \")\n    for (i in 1..n) {\n        print(\"$a \")\n        val sum = a + b\n        a = b\n        b = sum\n    }\n}\n\nfun main() {\n    val n = 10\n    fibonacci(n)\n}"
      },
      {
        "question": "Write a program to find the GCD (Greatest Common Divisor) of two numbers.",
        "solution": "fun gcd(a: Int, b: Int): Int {\n    var x = a\n    var y = b\n    while (y != 0) {\n        val temp = y\n        y = x % y\n        x = temp\n    }\n    return x\n}\n\nfun main() {\n    val num1 = 36\n    val num2 = 60\n    println(\"GCD of $num1 and $num2 is: ${gcd(num1, num2)}\")\n}"
      },
      {
        "question": "Create a program to check if a string is a palindrome.",
        "solution": "fun isPalindrome(str: String): Boolean {\n    val cleanStr = str.replace(\"[\\s,;.!'\",(){}\\[\\]]\", \"\").toLowerCase()\n    return cleanStr == cleanStr.reversed()\n}\n\nfun main() {\n    val str = \"A man, a plan, a canal, Panama!\"\n    if (isPalindrome(str))\n        println(\"$str is a palindrome\")\n    else\n        println(\"$str is not a palindrome\")\n}"
      },
      {
        "question": "Write a program to find the factorial of a number using tail recursion.",
        "solution": "tailrec fun factorial(n: Int, result: Int = 1): Int {\n    return if (n == 0) result else factorial(n - 1, result * n)\n}\n\nfun main() {\n    val num = 5\n    println(\"Factorial of $num is: ${factorial(num)}\")\n}"
      },
      {
        "question": "Create a program to find the sum of first n natural numbers.",
        "solution": "fun sumOfNaturalNumbers(n: Int): Int {\n    return n * (n + 1) / 2\n}\n\nfun main() {\n    val n = 100\n    println(\"Sum of first $n natural numbers is: ${sumOfNaturalNumbers(n)}\")\n}"
      },
      {
        "question": "Write a program to check if a number is Armstrong number or not.",
        "solution": "fun isArmstrong(num: Int): Boolean {\n    var temp = num\n    val digits = num.toString().length\n    var sum = 0\n    while (temp != 0) {\n        val remainder = temp % 10\n        sum += Math.pow(remainder.toDouble(), digits.toDouble()).toInt()\n        temp /= 10\n    }\n    return sum == num\n}\n\nfun main() {\n    val num = 153\n    if (isArmstrong(num))\n        println(\"$num is an Armstrong number\")\n    else\n        println(\"$num is not an Armstrong number\")\n}"
      },
      {
        "question": "Create a program to print all prime numbers between two given numbers.",
        "solution": "fun isPrime(num: Int): Boolean {\n    if (num <= 1)\n        return false\n    for (i in 2..num / 2) {\n        if (num % i == 0)\n            return false\n    }\n    return true\n}\n\nfun main() {\n    val start = 10\n    val end = 50\n    println(\"Prime numbers between $start and $end are:\")\n    for (num in start..end) {\n        if (isPrime(num))\n            println(num)\n    }\n}"
      },
      {
        "question": "Write a program to find the sum of digits of a number.",
        "solution": "fun sumOfDigits(num: Int): Int {\n    var n = num\n    var sum = 0\n    while (n != 0) {\n        sum += n % 10\n        n /= 10\n    }\n    return sum\n}\n\nfun main() {\n    val num = 12345\n    println(\"Sum of digits of $num is: ${sumOfDigits(num)}\")\n}"
      },
      {
        "question": "Create a program to reverse a number.",
        "solution": "fun reverseNumber(num: Int): Int {\n    var n = num\n    var reversed = 0\n    while (n != 0) {\n        val digit = n % 10\n        reversed = reversed * 10 + digit\n        n /= 10\n    }\n    return reversed\n}\n\nfun main() {\n    val num = 12345\n    println(\"Reversed number of $num is: ${reverseNumber(num)}\")\n}"
      },
      {
        "question": "Write a program to find the LCM (Least Common Multiple) of two numbers.",
        "solution": "fun gcd(a: Int, b: Int): Int {\n    var x = a\n    var y = b\n    while (y != 0) {\n        val temp = y\n        y = x % y\n        x = temp\n    }\n    return x\n}\n\nfun lcm(a: Int, b: Int): Int {\n    return a * b / gcd(a, b)\n}\n\nfun main() {\n    val num1 = 24\n    val num2 = 36\n    println(\"LCM of $num1 and $num2 is: ${lcm(num1, num2)}\")\n}"
      },
      {
        "question": "Create a program to check if a number is a perfect number or not.",
        "solution": "fun isPerfectNumber(num: Int): Boolean {\n    var sum = 0\n    for (i in 1 until num) {\n        if (num % i == 0)\n            sum += i\n    }\n    return sum == num\n}\n\nfun main() {\n    val num = 28\n    if (isPerfectNumber(num))\n        println(\"$num is a perfect number\")\n    else\n        println(\"$num is not a perfect number\")\n}"
      }
    ]
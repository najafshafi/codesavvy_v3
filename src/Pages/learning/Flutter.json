[
    {
        "title": "Introduction to Flutter",
        "content": "Flutter is an open-source UI software development kit created by Google. It allows developers to create natively compiled applications for mobile, web, and desktop from a single codebase.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      home: Scaffold(\n        appBar: AppBar(title: Text('Flutter Demo')),\n        body: Center(child: Text('Hello, Flutter!')), \n      ),\n    );\n  }\n}"
    },
    {
        "title": "Widgets in Flutter",
        "content": "Widgets are the basic building blocks of a Flutter app. They can be stateful or stateless. A stateless widget never changes its state, whereas a stateful widget can change its state during the app's lifetime.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(title: Text('Stateless Widget Example')),\n        body: Center(child: Text('This is a stateless widget')), \n      ),\n    );\n  }\n}"
    },
    {
        "title": "Stateful Widgets",
        "content": "Stateful widgets are dynamic, meaning they can change their state during their lifecycle. A StatefulWidget needs to implement a createState() method, which returns the State object.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Counter(),\n    );\n  }\n}\n\nclass Counter extends StatefulWidget {\n  @override\n  _CounterState createState() => _CounterState();\n}\n\nclass _CounterState extends State<Counter> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      _counter++; // Increments counter on button press\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Stateful Widget Example')),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            Text('Counter: $_counter'),\n            ElevatedButton(\n              onPressed: _incrementCounter,\n              child: Text('Increment'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}"
    },
    {
        "title": "Flutter Navigation",
        "content": "Flutter provides navigation through the Navigator widget. It enables the pushing and popping of routes (screens) within the app. You can use 'push' to navigate to a new screen and 'pop' to go back.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: HomeScreen(),\n    );\n  }\n}\n\nclass HomeScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Home Screen')),\n      body: Center(\n        child: ElevatedButton(\n          onPressed: () {\n            Navigator.push(\n              context,\n              MaterialPageRoute(builder: (context) => SecondScreen()),\n            );\n          },\n          child: Text('Go to Second Screen'),\n        ),\n      ),\n    );\n  }\n}\n\nclass SecondScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Second Screen')),\n      body: Center(\n        child: ElevatedButton(\n          onPressed: () {\n            Navigator.pop(context); // Navigate back to the previous screen\n          },\n          child: Text('Back to Home'),\n        ),\n      ),\n    );\n  }\n}"
    },
    {
        "title": "Handling User Input in Flutter",
        "content": "Flutter provides several ways to handle user input, including text fields, buttons, and gestures. You can use controllers to get the value from a TextField widget.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: InputScreen(),\n    );\n  }\n}\n\nclass InputScreen extends StatefulWidget {\n  @override\n  _InputScreenState createState() => _InputScreenState();\n}\n\nclass _InputScreenState extends State<InputScreen> {\n  final TextEditingController _controller = TextEditingController();\n\n  void _showInput() {\n    showDialog(\n      context: context,\n      builder: (context) => AlertDialog(\n        title: Text('User Input'),\n        content: Text('You entered: ${_controller.text}'),\n        actions: <Widget>[\n          TextButton(\n            onPressed: () => Navigator.pop(context),\n            child: Text('OK'),\n          ),\n        ],\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('User Input Example')),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            TextField(\n              controller: _controller,\n              decoration: InputDecoration(hintText: 'Enter some text'),\n            ),\n            ElevatedButton(\n              onPressed: _showInput,\n              child: Text('Show Input'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}"
    },
    {
        "title": "Flutter Layouts and Widgets",
        "content": "Flutter offers various widgets for building complex layouts, including rows, columns, stacks, and grids. These layout widgets allow you to arrange child widgets in various configurations.",
        "code_example": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: LayoutScreen(),\n    );\n  }\n}\n\nclass LayoutScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Flutter Layouts')), \n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: <Widget>[\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n            children: <Widget>[\n              Icon(Icons.home),\n              Icon(Icons.search),\n              Icon(Icons.settings),\n            ],\n          ),\n          Padding(\n            padding: const EdgeInsets.all(16.0),\n            child: Text('This is a column layout with an icon row.'),\n          ),\n        ],\n      ),\n    );\n  }\n}"
    }
]

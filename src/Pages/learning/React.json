[
    {
        "question": "What is React, and what is it primarily used for?",
        "solution": "React is a JavaScript library used for building user interfaces. It is primarily used for developing single-page applications and dynamic web pages."
    },
    {
        "question": "How can you create and start a new React application?",
        "solution": "You can create a new React app by running `npx create-react-app my-app`. Navigate to the app folder with `cd my-app` and start the development server with `npm start`."
    },
    {
        "question": "What is JSX in React?",
        "solution": "JSX stands for JavaScript XML. It allows you to write HTML directly within JavaScript, making it easier to create and manage React components."
    },
    {
        "question": "How do you create a functional component in React?",
        "solution": "A functional component in React is a JavaScript function that returns JSX. Example: `function Hello() { return <h1>Hello, World!</h1>; }`"
    },
    {
        "question": "What is the purpose of state in React?",
        "solution": "State in React is used to manage data within a component. It allows a component to respond to user input, events, or other changes."
    },
    {
        "question": "How do you update the state in a React class component?",
        "solution": "In a class component, you update the state using the `setState` method. Example: `this.setState({ count: this.state.count + 1 });`"
    },
    {
        "question": "What are props in React?",
        "solution": "Props are short for properties. They are used to pass data from one component to another in React, typically from a parent to a child component."
    },
    {
        "question": "How do you pass props to a component in React?",
        "solution": "You pass props to a component by including them as attributes in the component tag. Example: `<Welcome name='John' />`"
    },
    {
        "question": "What is the purpose of the React useState hook?",
        "solution": "The `useState` hook is used in functional components to add state management. Example: `const [count, setCount] = useState(0);`"
    },
    {
        "question": "What is the difference between a functional and a class component in React?",
        "solution": "Class components are ES6 classes that extend `React.Component` and use lifecycle methods. Functional components are simpler JavaScript functions that use hooks like `useState` and `useEffect` for state and lifecycle management."
    },
    {
        "question": "What is the purpose of the React useEffect hook?",
        "solution": "The `useEffect` hook allows you to perform side effects in functional components, such as data fetching, subscriptions, or DOM manipulation."
    },
    {
        "question": "How do you conditionally render elements in React?",
        "solution": "You can conditionally render elements using JavaScript expressions like `if` statements or the ternary operator. Example: `{isLoggedIn ? <LogoutButton /> : <LoginButton />}`"
    },
    {
        "question": "What is the React Virtual DOM?",
        "solution": "The Virtual DOM is a lightweight copy of the actual DOM used by React to improve performance. React updates the Virtual DOM first and then efficiently updates the real DOM as needed."
    },
    {
        "question": "What is the purpose of React keys in lists?",
        "solution": "Keys help React identify which items in a list have changed, been added, or removed, improving performance. Each key should be unique among siblings."
    },
    {
        "question": "How can you create a React ref?",
        "solution": "In React, you can create a ref using `React.createRef()` or the `useRef` hook in functional components. Example: `const inputRef = useRef();`"
    }
]
